name: "EKS-ECR"
on:
  workflow_dispatch:

env:
     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID  }}
     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:

  
  Plan_Dev:
    if: github.ref == 'refs/heads/FeatureBranch1'
    uses: Olaminiyi/Deploying-applications-to-Kubernetes-using-GitOps/.github/workflows/aws_tf_plan.yml@FeatureBranch1
    with:
      path: EKS-ECR
      tf_vars_file: dev.tfvars
      gh_environment: dev
    secrets:
      cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
     

  Deploy_Dev:
    needs: Plan_Dev
    uses: Olaminiyi/Deploying-applications-to-Kubernetes-using-GitOps/.github/workflows/aws_tf_appy.yml@FeatureBranch1
    with:
      path: EKS-ECR
      tf_vars_file: dev.tfvars
      gh_environment: dev
    secrets:
      cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  Plan_Uat:
    if: github.ref == 'refs/heads/main'
    uses: Olaminiyi/Deploying-applications-to-Kubernetes-using-GitOps/.github/workflows/aws_tf_plan.yml@main
    with:
      path: EKS-ECR
      tf_vars_file: uat.tfvars
      gh_environment: uat
    secrets:
      cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    

  Deploy_Uat:
    needs: Plan_Uat
    uses: Olaminiyi/Deploying-applications-to-Kubernetes-using-GitOps/.github/workflows/aws_tf_appy.yml@main
    with:
      path: IAMRoles
      tf_vars_file: uat.tfvars
      gh_environment: uat
    secrets:
      cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}